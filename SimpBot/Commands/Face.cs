using Disco;
using Discord;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Text;

namespace SimpBot.Commands
{
    class Face : Command
    {
        public override string Icon => "🌝";

        public override string[] Aliases => new[] { "generateFace", "face" };

        public override string Description => "Returns a fake AI-generated face.";

        public override string[] Syntax => new[] { "gender", "minimum age", "maximum age" };

        public override int MinArgs => 0;

        public override int MaxArgs => 3;

        public override void Run(CommandArgs commandArgs)
        {
            // Set typing state until we return
            using var typingState = commandArgs.Message.Channel.EnterTypingState();

            var parameters = new StringBuilder();
            var parameterNames = new[] { "gender", "minimum_age", "maximum_age" };
            for (int i = 0; i < commandArgs.Args.Length; ++i)
            {
                if (i == 0)
                    parameters.Append("?");
                else
                    parameters.Append("&");

                // TODO: Check if valid type (i.e. numbers for ages)
                // Age range

                if (i == 1)
                {
                    try 
                    {
                        if (int.Parse(commandArgs.Args[i]) < 18)
                        {
                            Disco.Utils.SendError(commandArgs.Message.Channel, "Minimum age must be 18 or higher.");        
                            return;
                        }
                    }
                    catch
                    {
                        Disco.Utils.SendError(commandArgs.Message.Channel, "NUMBER IDIOT!!!!");
                        return;
                    }

                }
                parameters.Append($"{parameterNames[i]}={commandArgs.Args[i]}");
            }

            var response = Disco.Utils.GetHttpClient().GetAsync($"https://fakeface.rest/face/json{parameters}").Result;
            var responseString = response.Content.ReadAsStringAsync().Result;

            // Read as json
            try
            {
                var deserializedResponse = Newtonsoft.Json.JsonConvert.DeserializeObject<Dictionary<string, string>>(responseString);
                EmbedBuilder eb = Disco.Utils.BuildDefaultEmbed();
                eb.WithTitle($"Generated {deserializedResponse["gender"]}, aged {deserializedResponse["age"]}");
                eb.WithDescription($"Generated by {deserializedResponse["source"]}");
                eb.WithImageUrl(deserializedResponse["image_url"]);
                commandArgs.Message.Channel.SendMessageAsync("", false, eb.Build());
            }
            catch
            {
                Disco.Utils.SendError(commandArgs.Message.Channel, "Could not generate face! Check syntax and try again.");
            }
        }
    }
}
